// nextflow.config - Fixed configuration for report generation

// Default parameters
params {
    input_file = "$HOME/github/learning_nextflow/data/num.txt"
    top_n = 10
    outdir = "results"
    help = false
}

// Process configuration
process {
    // Default process settings
    cpus = 1
    memory = '1 GB'
    time = '10m'

    // Error handling strategy
    errorStrategy = 'retry'
    maxRetries = 2

    // Process-specific settings
    withName: 'SORT' {
        memory = '2 GB'
    }

    withName: 'TOPN' {
        memory = '512 MB'
    }
}

// Fixed execution reports configuration
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
    overwrite = true
}

report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
    overwrite = true
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
    overwrite = true
}

// Manifest information
manifest {
    name = 'number-sorting-pipeline'
    author = 'Your Name'
    description = 'A simple pipeline to sort numbers and extract top N values'
    version = '1.0.0'
    nextflowVersion = '>=21.10.0'
}

// Help message
if (params.help) {
    log.info """
    Number Sorting Pipeline
    =======================

    Usage:
        nextflow run main.nf [options]

    Options:
        --input_file    Path to input file containing numbers [default: ${params.input_file}]
        --top_n         Number of top values to extract [default: ${params.top_n}]
        --outdir        Output directory [default: ${params.outdir}]
        --help          Show this help message

    Example:
        nextflow run main.nf --input_file data/numbers.txt --top_n 5 --outdir results
    """
    exit 0
}
